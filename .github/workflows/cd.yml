name: CD Pipeline

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [main]

env:
  HELMFILE_FILE_PATH: ./deploy/helmfile/helmfile.yaml.gotmpl
  IMAGE_REPOSITORY: ${{ secrets.IMAGE_NAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'pnpm'

      # Install dependencies and build (no artifact needed)
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_HOST }}    # e.g. ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        # using github.sha as tag
        run: |
          docker build -t $IMAGE_REPOSITORY:$IMAGE_TAG .
          docker push $IMAGE_REPOSITORY:$IMAGE_TAG
        # ensure Dockerfile copies from .output as above

      - name: Deploy with Helmfile
        uses: ./.github/actions/deploy-helmfile
        with:
          helmfile-args: --environment prod
          kube-config: ${{ secrets.KUBE_CONFIG_DATA }}
          frontend-env: ${{ secrets.FRONTEND_ENV }}